quarkus.log.level=INFO

## DATASOURCES
quarkus.datasource.db-kind=h2
quarkus.datasource.username=sa
quarkus.datasource.password=
quarkus.datasource.jdbc.url=${SIGNOMIX_DATABASE_URL:jdbc:h2:mem:iotdata}

## SIGNOMIX
processor.script=processor.js
decoder.script=decoder.js
device.eui.header.first=true
device.authorization.required=false

## MQ
# Configure the outgoing RabbitMQ exchange `events`
mp.messaging.outgoing.events.connector=smallrye-rabbitmq
mp.messaging.outgoing.events.exchange.name=${MQ_EVENTS_EXCHANGE: }
mp.messaging.outgoing.events.exchange.declare=true
mp.messaging.outgoing.events.exchange.type=fanout
mp.messaging.outgoing.events.exchange.durable=false
mp.messaging.outgoing.events.host=${MQ_HOST: }
mp.messaging.outgoing.events.port=${MQ_PORT: }
mp.messaging.outgoing.events.username=${MQ_USER: }
mp.messaging.outgoing.events.password=${MQ_PASSWORD: }
mp.messaging.outgoing.events.virtual-host=
mp.messaging.outgoing.events.ssl=false

mp.messaging.outgoing.notifications.connector=smallrye-rabbitmq
#mp.messaging.outgoing.notifications.exchange.declare=false
mp.messaging.outgoing.notifications.default-routing-key=#
mp.messaging.outgoing.notifications.host=${MQ_HOST: }
mp.messaging.outgoing.notifications.port=${MQ_PORT: }
mp.messaging.outgoing.notifications.username=${MQ_USER: }
mp.messaging.outgoing.notifications.password=${MQ_PASSWORD: }
mp.messaging.outgoing.notifications.virtual-host=
mp.messaging.outgoing.notifications.ssl=false

## OPENAPI
quarkus.smallrye-openapi.path=/api/receiver/q/opienapi
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/api/receiver/q/swagger

