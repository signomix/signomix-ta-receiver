## CONTAINER
signomix.image.group.default=
signomix.release=%release%

quarkus.container-image.builder=jib
quarkus.container-image.group=${SIGNOMIX_IMAGE_GROUP:${signomix.image.group.default}}
quarkus.container-image.name=${SIGNOMIX_IMAGE_NAME:signomix-ta-receiver}
quarkus.container-image.tag=${SIGNOMIX_IMAGE_TAG:%release%}

## HTTP
quarkus.http.port=${PORT:8080}
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.access-control-allow-credentials=true
quarkus.http.access-log.enabled=true

## LOGGING
quarkus.log.level=${SIGNOMIX_LOG_LEVEL:INFO}
quarkus.log.handler.gelf.enabled=${GELF_ENABLED:false}
quarkus.log.handler.gelf.host=${GELF_HOST}
quarkus.log.handler.gelf.port=${GELF_PORT}
quarkus.log.handler.gelf.additional-field.X-OVH-TOKEN.value=${GELF_TOKEN}
quarkus.log.handler.gelf.additional-field.X-OVH-TOKEN.type=String


## DATASOURCES
signomix.database.type=${SIGNOMIX_DATABASE_TYPE:postgresql}
quarkus.datasource.oltp.db-kind=postgresql
quarkus.datasource.oltp.username=${POSTGRES_USER:sa}
quarkus.datasource.oltp.password=${POSTGRES_PASSWORD:}
quarkus.datasource.oltp.jdbc.url=${POSTGRES_URL}
#quarkus.datasource.oltp.jdbc.telemetry=true

quarkus.datasource.olap.db-kind=postgresql
quarkus.datasource.olap.username=${POSTGRES_USER:sa}
quarkus.datasource.olap.password=${POSTGRES_PASSWORD:}
quarkus.datasource.olap.jdbc.url=${POSTGRES_URL}
#quarkus.datasource.olap.jdbc.telemetry=true

quarkus.datasource.old.db-kind=h2
quarkus.datasource.old.username=${SIGNOMIX_DATABASE_USER:sa}
quarkus.datasource.old.password=${SIGNOMIX_DATABASE_PASSWORD:}
quarkus.datasource.old.jdbc.url=${SIGNOMIX_DATABASE_URL:jdbc:h2:mem:iotdata}

## CACHE
quarkus.cache.caffeine."device-cache".initial-capacity=10 
quarkus.cache.caffeine."device-cache".maximum-size=1000
quarkus.cache.caffeine."device-cache".expire-after-write=10S

## SIGNOMIX
processor.script=processor.js
decoder.script=decoder.js
device.eui.header.required=${SIGNOMIX_EUI_HEADER_REQUIRED:true}
device.authorization.required=${SIGNOMIX_AUTHORIZATION_HEADER_REQUIRED:true}
device.status.update.integrated=${SIGNOMIX_STATUS_INTEGRATED:false}
signomix.app.key=${SIGNOMIX_APP_KEY}
signomix.core.host=${SIGNOMIX_CORE_HOST_URL:http://localhost:8080}
receiver.api.mode=test
signomix.default.organization.id=0
signomix.default.application.id=0
signomix.command_id.bytes=0


## MQ
# Configure the outgoing RabbitMQ exchange `events`
mp.messaging.outgoing.events.connector=smallrye-rabbitmq
mp.messaging.outgoing.events.exchange.name=${MQ_EVENTS_EXCHANGE: }
mp.messaging.outgoing.events.exchange.declare=false
mp.messaging.outgoing.events.exchange.type=fanout
mp.messaging.outgoing.events.exchange.durable=false
mp.messaging.outgoing.events.host=${MQ_HOST}
mp.messaging.outgoing.events.port=${MQ_PORT}
mp.messaging.outgoing.events.username=${MQ_USER}
mp.messaging.outgoing.events.password=${MQ_PASSWORD}
mp.messaging.outgoing.events.virtual-host=
mp.messaging.outgoing.events.ssl=false

mp.messaging.outgoing.notifications.connector=smallrye-rabbitmq
#mp.messaging.outgoing.notifications.exchange.declare=false
mp.messaging.outgoing.notifications.default-routing-key=#
mp.messaging.outgoing.notifications.host=${MQ_HOST}
mp.messaging.outgoing.notifications.port=${MQ_PORT}
mp.messaging.outgoing.notifications.username=${MQ_USER}
mp.messaging.outgoing.notifications.password=${MQ_PASSWORD}
mp.messaging.outgoing.notifications.virtual-host=
mp.messaging.outgoing.notifications.ssl=false

## MQTT
#
mp.messaging.outgoing.data-received.connector=smallrye-mqtt
mp.messaging.outgoing.data-received.host=signomix-broker
mp.messaging.outgoing.data-received.port=1883
mp.messaging.outgoing.data-received.topic=signomix/events/data-received
mp.messaging.outgoing.data-received.server-name=signomix-broker
#
mp.messaging.outgoing.data-created.connector=smallrye-mqtt
mp.messaging.outgoing.data-created.host=signomix-broker
mp.messaging.outgoing.data-created.port=1883
mp.messaging.outgoing.data-created.topic=signomix/events/data-created
mp.messaging.outgoing.data-created.server-name=signomix-broker

## OPENAPI
quarkus.smallrye-openapi.path=/api/receiver/q/openapi
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/api/receiver/q/swagger

## EXCEPTION
signomix.receiver.exception.api.param.missing=Missing request parameter

## OPEN TELEMTRY
#quarkus.otel.exporter.otlp.traces.endpoint=http://jaeger-all-in-one:4317
##quarkus.otel.exporter.otlp.traces.headers=authorization=Bearer my_secret 
#quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n 
